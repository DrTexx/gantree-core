---
- name: check if keys already exist
  shell: |
    set -o pipefail
    if [ -d /home/gropius_user/.local/share/substrate/chains/{{ substrate_network_id }}/keystore ]; then
      ls /home/gropius_user/.local/share/substrate/chains/{{ substrate_network_id }}/keystore -1U | wc -l
    else
      mkdir -p /home/gropius_user/.local/share/substrate/chains/{{ substrate_network_id }}/
      chown -R gropius_user:substrate /home/gropius_user/.local/share/substrate
      echo 0
    fi
  args:
    executable: /bin/bash
  register: keystore_files
  changed_when: False

- name: install xxd
  apt:
    name: vim-common
    update_cache: yes

- name: save session info
  shell: |
    set -o pipefail

    if [ {{ item }} = gran ]; then
      crypto="ed25519"
    else
      crypto="sr25519"
    fi

    hexprefix=$(echo -n {{ item }} | xxd -p)

    cd /home/gropius_user/.local/share/substrate/chains/{{ substrate_network_id }}/keystore

    inspect_result=$(cat ./${hexprefix}* | xargs /usr/local/bin/subkey --${crypto} inspect)

    public_key=$(echo -n "${inspect_result}" | grep "Public key" | cut -d':' -f2 | tr -d '[:space:]')
    address=$(echo -n "${inspect_result}" | grep "Address" | cut -d':' -f2 | tr -d '[:space:]')

    printf '%b\n' "{{ item }}:\n  address: '${address}'\n  public_key: '${public_key}'"
  args:
    executable: /bin/bash
  register: session
  loop:
    - gran
    - babe
    - imon
    - para
  when: keystore_files.stdout != "0"
  changed_when: False

- name: write session info to disk on remote host
  template:
    src: session.yaml.j2
    # TODO(ryan): re-add this
    dest: /home/gropius_user/session.{{ substrate_network_id }}.yaml
    #dest: /home/gropius_user/session.yaml
    mode: 0666
  when: keystore_files.stdout != "0"

- name: ensure host session directory
  local_action:
    module: file
    path: /tmp/gropius_host/session
    state: directory
  become: no

- name: retrieve session info
  fetch:
    # TODO(ryan): re-add this
    src: '/home/gropius_user/session.{{ substrate_network_id }}.yaml'
    dest: '/tmp/gropius_host/session/{{ inventory_hostname }}.{{ substrate_network_id }}.yaml'
    #src: '/home/gropius_user/session.yaml'
    #dest: '/tmp/gropius_host/session/{{ inventory_hostname }}.yaml'
    flat: yes
  when: keystore_files.stdout != "0"

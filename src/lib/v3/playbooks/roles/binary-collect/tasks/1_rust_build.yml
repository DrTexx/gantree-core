---
- name: install git
  apt:
    update_cache: yes
    pkg:
      - git

- name: download {{ binary_name }} rust source
  git:
    repo: '{{ rust_build__repository }}'
    version: '{{ rust_build__repository_version }}'
    dest: '{{ rust_build__build_path }}/{{ rust_build__src_folder }}'

- name: install build requirements for ubuntu
  apt:
    update_cache: no
    pkg: "{{ rust_build__apt_requirements }}"

- name: setup cargo and rustup
  include_role:
    name: ansible-role-cargo
  when: 'install_cargo != "false"'

- name: configure toolchain
  shell: "{{ rust_build__toolchain }}"

- debug:
    msg: "Note: beginning build, this may take a long time..."

- name: compile {{ binary_name }}
  shell: |
    cargo build {{ rust_build__build_arguments }}
  args:
    chdir: '{{ rust_build__build_path }}/{{ rust_build__src_folder }}/{{ rust_build__src_subfolder }}/'
  register: build_result
  changed_when: false

- debug:
    msg: "Build stdout: {{ build_result.stdout }}"

- name: create host bin directory
  file:
    path: '{{ gantree_control_working }}/bin'
    state: directory

- name: delete any existing binary
  file:
    path: '{{ gantree_control_working }}/bin/{{ binary_name }}'
    state: absent

- name: copy node bin to working dir
  fetch:
    src: '{{ rust_build__build_path }}/{{ rust_build__src_folder }}/{{ rust_build__src_subfolder }}/{{ rust_build__compile_path }}/{{ rust_build__binary_filename }}'
    dest: '{{ gantree_control_working }}/bin/{{ binary_name }}'
    flat: true
